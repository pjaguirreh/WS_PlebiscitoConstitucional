filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = paste0("2022-", mes, "-", "dia ", hora))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = paste0("2022-", mes, "-", dia, "" ", hora))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = paste0("2022-", mes, "-", dia, " ", hora))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = paste0("2022-", mes, "-", dia, " ", hora, ":00:00"))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00")))
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
ggplot(aes(x = valorParametro)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 20, col = "red")
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00"))) %>%
ggplot(aes(x = estampaTiempo, y = valorParametro, col = DeviceId)) +
geom_line() +
#geom_point(size = 0.5) +
geom_hline(yintercept = 20, col = "red", size = 1)
api %>%
filter(nombreParametro == "H2S") %>%
filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00"))) %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
#geom_point(size = 0.5) +
geom_hline(yintercept = 20, col = "red", size = 1)
20/1000
api %>%
group_by(DeviceId,
nombreParametro,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE))
api %>%
group_by(DeviceId,
nombreParametro,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00")), .before = mes) %>%
select(-mes, -dia, -hora)
api %>%
group_by(DeviceId,
nombreParametro,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00")), .before = mes) %>%
ungroup() %>%
select(-mes, -dia, -hora)
api_hora <- api %>%
group_by(DeviceId,
nombreParametro,
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0("2022-", mes, "-", dia, " ", hora, ":00:00")), .before = mes) %>%
ungroup() %>%
select(-mes, -dia, -hora)
api_hora %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
#geom_point(size = 0.5) +
geom_hline(yintercept = 20, col = "red", size = 1)
api_hora <- api %>%
group_by(DeviceId,
nombreParametro,
anio = year(estampaTiempo),
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0(anio,"-", mes, "-", dia, " ", hora, ":00:00")), .before = mes) %>%
ungroup() %>%
select(-anio, -mes, -dia, -hora)
api_hora %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 20, col = "red", size = 1)
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 20, col = "red", size = 1)
api <- read_parquet("../Desktop/ApiRestCalAustral_2022831_202291.parquet") %>%
filter(nombreParametro %in% c("H2S", "DIRV", "VELV"))
api_hora <- api %>%
group_by(DeviceId,
nombreParametro,
anio = year(estampaTiempo),
mes = month(estampaTiempo),
dia = day(estampaTiempo),
hora = hour(estampaTiempo)) %>%
summarise(valorParametro = mean(valorParametro, na.rm = TRUE)) %>%
mutate(fecha = ymd_hms(paste0(anio,"-", mes, "-", dia, " ", hora, ":00:00")), .before = mes) %>%
ungroup() %>%
select(-anio, -mes, -dia, -hora)
20/1000
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1)
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = valorParametro)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red")
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1)
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1) +
theme_minimal()
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = valorParametro)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red")
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = valorParametro)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red") +
theme_minimal()
api
api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01")
api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>% View
api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>%
arrange(DeviceId, estampaTiempo) %>% View
?zoo::rollmean
mutate(ma = rollmean(valorParametro, align = 'center', fill = NA, k = 15)
api_mm30min <- api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId) %>%
arrange(DeviceId, estampaTiempo) %>%
mutate(ma = rollmean(valorParametro, align = 'center', fill = NA, k = 15))
library(zoo)
api_mm30min <- api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId) %>%
arrange(DeviceId, estampaTiempo) %>%
mutate(ma = rollmean(valorParametro, align = 'center', fill = NA, k = 15))
api_mm30min
View(api_mm30min)
api_mm30min <- api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId) %>%
arrange(DeviceId, estampaTiempo) %>%
mutate(ma = rollmean(valorParametro, align = 'center', fill = NA, k = 3))
api_mm30min <- api %>%
filter(nombreParametro == "H2S") %>%
filter(estampaTiempo >= "2022-01-01") %>%
group_by(DeviceId) %>%
arrange(DeviceId, estampaTiempo) %>%
mutate(ma = rollmean(valorParametro, align = 'center', fill = NA, k = 15))
api_mm30min
api_mm30min %>%
ggplot(aes(x = estampaTiempo, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1) +
theme_minimal()
api_mm30min %>%
ggplot(aes(x = estampaTiempo, y = ma, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1) +
theme_minimal()
read_parquet("../Desktop/ApiRestCalAustral_2022831_202291.parquet") %>% distinct(nombreParametro)
api_mm30min
api_mm30min %>%
ggplot(aes(x = estampaTiempo, y = ma, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1) +
theme_minimal()
api %>%
filter(nombreParametro == "H2S") %>%
#filter(valorParametro >= 0, valorParametro <= 250) %>%
filter(estampaTiempo >= "2022-01-01") %>%
ggplot(aes(x = estampaTiempo, y = valorParametro, col = DeviceId)) +
geom_line() +
#geom_point(size = 0.5) +
geom_hline(yintercept = 0.02, col = "red", size = 1)
api_hora %>%
filter(year(fecha)>= 2022) %>%
filter(nombreParametro == "H2S") %>%
ggplot(aes(x = fecha, y = valorParametro, col = DeviceId)) +
geom_line() +
geom_hline(yintercept = 0.02, col = "red", size = 1) +
theme_minimal()
api_mm30min %>%
ggplot(aes(x = valorParametro)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red") +
theme_minimal()
api_mm30min %>%
ggplot(aes(x = mm)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red") +
theme_minimal()
api_mm30min %>%
ggplot(aes(x = ma)) +
stat_ecdf() +
facet_grid(vars(DeviceId)) +
geom_vline(xintercept = 0.02, col = "red") +
theme_minimal()
api_mm30min
api_mm30min %>% summarise(prom = mean(valorParametro, na.rm = TRUE))
library(tidyverse)
library(gtrendsR)
t <- "2022-05-04 2022-08-25"
c <- "CL"
t <- "2022-05-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A$interest_by_region
A$interest_over_time
A_i <- as.numeric(A$interest_over_time$hits)
R_i <- as.numeric(R$interest_over_time$hits)
I <- (A_i/(A_i+R_i))
I
library(forecast)
I %>% auto.arima() %>% forecast(h = 5)
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
I %>% auto.arima() %>% forecast(h = 10) %>% autoplot()
?forecast
?forecast::forecast
I %>% auto.arima() %>% forecast(h = 1) %>% autoplot()
I %>% auto.arima() %>% forecast(h = 100) %>% autoplot()
I %>% auto.arima() %>% forecast(h = 1) %>% autoplot()
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
t <- "2022-01-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
I %>% auto.arima()
I
t <- "2022-01-04 2022-09-20"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
t <- "2022-05-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
t <- "2022-05-04 2022-09-01"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
t <- "2022-05-04 2022-08-31"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A_i <- as.numeric(A$interest_over_time$hits)
R_i <- as.numeric(R$interest_over_time$hits)
I <- (A_i/(A_i+R_i))
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
as.numeric(A$interest_over_time$hits)
A
A$interest_over_time$hits
t <- "2022-05-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A
A$interest_over_time$hits
R$interest_over_time$hits
t <- "2022-03-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A_i <- as.numeric(A$interest_over_time$hits)
R_i <- as.numeric(R$interest_over_time$hits)
I <- (A_i/(A_i+R_i))
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
A$interest_by_region
c <- "CL-AT"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
c <- "CL-AN"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A_i <- as.numeric(A$interest_over_time$hits)
R_i <- as.numeric(R$interest_over_time$hits)
I <- (A_i/(A_i+R_i))
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
c <- "CL-VS"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A_i <- as.numeric(A$interest_over_time$hits)
R_i <- as.numeric(R$interest_over_time$hits)
I <- (A_i/(A_i+R_i))
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
A
as.numeric(A$interest_over_time$hits)
A$interest_over_time$hits
R$interest_over_time$hits
(A_i/(A_i+R_i))
c <- "CL"
t <- "2022-03-04 2022-08-25"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
t <- "2022-09-03"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
?gtrends
t <- "today"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
t <- "today+5-y"
c <- "CL"
A <- gtrends(keyword = "apruebo -rechazo", geo = c, time = t)
R <- gtrends(keyword = "rechazo -apruebo", geo = c, time = t)
A
A$interest_over_time
I <- (A_i/(A_i+R_i))
I %>% auto.arima() %>% forecast(h = 5) %>% autoplot()
A$interest_over_time$hits
Sys.time()
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
setwd("C:/Users/pjagu/OneDrive/Documentos/GitHub/WS_PlebiscitoConstitucional")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
resultados_region
resultados_region
resultados_region %>%
select(-votos_validos, -votos_totales, -cod_reg, -nulo, -blanco) %>%
pivot_longer(2:3, names_to = "tipo", values_to = "votos") %>%
mutate(tipo = case_when(
tipo == "apruebo" ~ "Apruebo",
tipo == "rechazo" ~ "Rechazo"
)) %>%
mutate(tipo = as.factor(tipo),
tipo = fct_relevel(tipo, c("Apruebo", "Rechazo")))
resultados_region
resultados_region <- resultados_region %>%
select(-votos_validos, -votos_totales, -cod_reg, -nulo, -blanco) %>%
pivot_longer(2:3, names_to = "tipo", values_to = "votos") %>%
mutate(tipo = case_when(
tipo == "apruebo" ~ "Apruebo",
tipo == "rechazo" ~ "Rechazo"
)) %>%
mutate(tipo = as.factor(tipo),
tipo = fct_relevel(tipo, c("Apruebo", "Rechazo")))
resultados_region
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
`glue("Domingo 4 de septiembre 2022. Actualizado a las {hour(fecha_hora)}:{minute(fecha_hora)}"))
glue("Domingo 4 de septiembre 2022. Actualizado a las {hour(fecha_hora)}:{minute(fecha_hora)}"))
glue("Domingo 4 de septiembre 2022. Actualizado a las {hour(fecha_hora)}:{minute(fecha_hora)}")
Sys.time()
hour(Sys.time())
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(rjson)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
library(lubridate)
library(glue)
library(purrr)
library(stringr)
library(stringi)
source("scripts/FuncionGrafico.R", encoding = "UTF-8")
source("scripts/Datos2V2021.R", encoding = "UTF-8")
source("scripts/DatosExtra.R", encoding = "UTF-8")
source("scripts/WS_Servel_Paises_f.R", encoding = "UTF-8")
source("scripts/WS_Servel_Region_f.R", encoding = "UTF-8")
source("scripts/WS_Servel_Comuna_f.R", encoding = "UTF-8")
source("scripts/ManejoDatos.R", encoding = "UTF-8")
rmarkdown::render(input = "PlebiscitoConstitutional.Rmd",
output_file = "PlebiscitoConstitutional.html")
markdown::rpubsUpload(title = "Plebiscito 04/09/2022",
htmlFile = "PlebiscitoConstitutional.html",
id = "https://api.rpubs.com/api/v1/document/936977/c0a23d876db147249022aa378023349b")
rm(list = ls())
source("scripts/WS_Servel_Paises_f.R", encoding = "UTF-8")
source("scripts/WS_Servel_Region_f.R", encoding = "UTF-8")
source("scripts/WS_Servel_Comuna_f.R", encoding = "UTF-8")
source("scripts/ManejoDatos.R", encoding = "UTF-8")
rm(list = ls())
