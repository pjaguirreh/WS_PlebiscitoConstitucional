rechazo = as.numeric(str_remove_all(detalle_comunas[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_comunas[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_comunas[[5]][[3]]$c, "\\.")))
}
lista_comunas <- fromJSON(file = "https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/all.json")
diccionario_com <- data.frame(cod_reg = sapply(lista_comunas, "[[", 1),
region = sapply(lista_comunas, "[[", 2))
scrap_comunas <- function(x){
# datos de votación
detalle_comunas <- fromJSON(file = paste0("https://servelelecciones.cl/data/elecciones_constitucion/computo/comunas/",
x,
".json"))
data.frame(
cod_com = x,
apruebo = as.numeric(str_remove_all(detalle_comunas[[4]][[1]]$c, "\\.")),
rechazo = as.numeric(str_remove_all(detalle_comunas[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_comunas[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_comunas[[5]][[3]]$c, "\\.")))
}
scrap_comunas <- function(x){
detalle_comunas <- fromJSON(file = paste0("https://servelelecciones.cl/data/elecciones_constitucion/computo/comunas/",
x,
".json"))
data.frame(
cod_com = x,
apruebo = as.numeric(str_remove_all(detalle_comunas[[4]][[1]]$c, "\\.")),
rechazo = as.numeric(str_remove_all(detalle_comunas[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_comunas[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_comunas[[5]][[3]]$c, "\\.")))
}
b <- map(diccionario_com$cod_reg, scrap_comunas) %>%
bind_rows()
b
a %>%
ggplot(aes(x = tipo, y = votos, label = votos)) +
geom_col(siez = 14) +
geom_label() +
labs(x = NULL, y = NULL,
title = "Resultados parciales plebiscito nacional propuesta constitucional",
subtitle = glue('Actualizado a las {str_sub(Sys.time(), 12,16)}'),
caption = "Elaborado por Pablo Aguirre Hörmann (@PAguirreH - https://github.com/pjaguirreh)") +
mi_tema +
theme(axis.text.y.left = element_blank()) +
facet_wrap(vars(region)) +
theme(axis.text.y.left = element_blank(),
axis.text.x = element_text(size = 15))
a %>%
ggplot(aes(x = tipo, y = votos, label = votos)) +
geom_col(siez = 24) +
geom_label() +
labs(x = NULL, y = NULL,
title = "Resultados parciales plebiscito nacional propuesta constitucional",
subtitle = glue('Actualizado a las {str_sub(Sys.time(), 12,16)}'),
caption = "Elaborado por Pablo Aguirre Hörmann (@PAguirreH - https://github.com/pjaguirreh)") +
mi_tema +
theme(axis.text.y.left = element_blank()) +
facet_wrap(vars(region)) +
theme(axis.text.y.left = element_blank(),
axis.text.x = element_text(size = 15))
a %>%
ggplot(aes(x = tipo, y = votos, label = votos)) +
geom_col() +
geom_label(size = 14) +
labs(x = NULL, y = NULL,
title = "Resultados parciales plebiscito nacional propuesta constitucional",
subtitle = glue('Actualizado a las {str_sub(Sys.time(), 12,16)}'),
caption = "Elaborado por Pablo Aguirre Hörmann (@PAguirreH - https://github.com/pjaguirreh)") +
mi_tema +
theme(axis.text.y.left = element_blank()) +
facet_wrap(vars(region)) +
theme(axis.text.y.left = element_blank(),
axis.text.x = element_text(size = 15))
a %>%
ggplot(aes(x = tipo, y = votos, label = votos)) +
geom_col() +
geom_label(size = 10) +
labs(x = NULL, y = NULL,
title = "Resultados parciales plebiscito nacional propuesta constitucional",
subtitle = glue('Actualizado a las {str_sub(Sys.time(), 12,16)}'),
caption = "Elaborado por Pablo Aguirre Hörmann (@PAguirreH - https://github.com/pjaguirreh)") +
mi_tema +
theme(axis.text.y.left = element_blank()) +
facet_wrap(vars(region)) +
theme(axis.text.y.left = element_blank(),
axis.text.x = element_text(size = 15))
a$votos <- rep(c(0.45, 0.45, 0.05, 0.05), 16)
a %>%
ggplot(aes(x = tipo, y = votos, label = votos)) +
geom_col() +
geom_label(size = 6) +
labs(x = NULL, y = NULL,
title = "Resultados parciales plebiscito nacional propuesta constitucional",
subtitle = glue('Actualizado a las {str_sub(Sys.time(), 12,16)}'),
caption = "Elaborado por Pablo Aguirre Hörmann (@PAguirreH - https://github.com/pjaguirreh)") +
mi_tema +
theme(axis.text.y.left = element_blank()) +
facet_wrap(vars(region)) +
theme(axis.text.y.left = element_blank(),
axis.text.x = element_text(size = 15)) +
ylim(c(0,1))
b
b
b
b
read_excel("planillas_aux/Lista_RegionDistritoComuna.csv")
read_csv("planillas_aux/Lista_RegionDistritoComuna.csv")
b
diccionario_comuna
b %>%
left_join(diccionario_comuna, by = "cod_com")
diccionario_comuna %>% names
b %>%
left_join(diccionario_com, by = "cod_com")
diccionario_com %>% names
b %>% names
diccionario_com <- data.frame(cod_com = sapply(lista_comunas, "[[", 1),
region = sapply(lista_comunas, "[[", 2))
b %>%
left_join(diccionario_com, by = "cod_com")
read_csv("planillas_aux/Lista_RegionDistritoComuna.csv")
b %>%
left_join(diccionario_com, by = "cod_com")
diccionario_com <- data.frame(cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna")
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>% as_tibble()
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>% as_tibble()
rowwise() %>%
mutate(votos_validos = sum(apruebo, rechazo),
votos_totales = sum(votos_validos, nulo, blanco)#,
#participacion = vot_tot/padron
)
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>% as_tibble()
rowwise()
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>%
rowwise() %>%
mutate(votos_validos = sum(apruebo, rechazo),
votos_totales = sum(votos_validos, nulo, blanco)#,
#participacion = vot_tot/padron
) %>%
ungroup()
b %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>%
rowwise() %>%
mutate(votos_validos = sum(apruebo, rechazo),
votos_totales = sum(votos_validos, nulo, blanco)#,
#participacion = vot_tot/padron
) %>%
ungroup() %>%
select(region, comuna, cod_com, apruebo, rechazo, nulo, blanco, votos_validos, votos_totales)
resultados_comuna <- map(diccionario_com$cod_reg, scrap_comunas) %>%
bind_rows() %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>%
rowwise() %>%
mutate(votos_validos = sum(apruebo, rechazo),
votos_totales = sum(votos_validos, nulo, blanco)#,
#participacion = vot_tot/padron
) %>%
ungroup() %>%
select(region, comuna, cod_com, apruebo, rechazo, nulo, blanco, votos_validos, votos_totales) %>%
mutate(region = str_remove_all(region, "DE "),
region = str_remove_all(region, "DEL "))
resultados_comuna <- map(diccionario_com$cod_com, scrap_comunas) %>%
bind_rows() %>%
left_join(diccionario_com, by = "cod_com") %>%
left_join(read_csv("planillas_aux/Lista_RegionDistritoComuna.csv"), by = "comuna") %>%
rowwise() %>%
mutate(votos_validos = sum(apruebo, rechazo),
votos_totales = sum(votos_validos, nulo, blanco)#,
#participacion = vot_tot/padron
) %>%
ungroup() %>%
select(region, comuna, cod_com, apruebo, rechazo, nulo, blanco, votos_validos, votos_totales) %>%
mutate(region = str_remove_all(region, "DE "),
region = str_remove_all(region, "DEL "))
resultados_comuna
read_excel("planillas_aux/Estimaciones_de_Tasa_de_Pobreza_por_Ingresos_por_Comunas_2020.xlsx")
read_excel("planillas_aux/Estimaciones_de_Tasa_de_Pobreza_por_Ingresos_por_Comunas_2020.xlsx") %>%
mutate(`Nombre comuna` = str_to_upper(`Nombre comuna`),
`Nombre comuna` = stri_trans_general(str = `Nombre comuna`, id = "Latin-ASCII"),
`Nombre comuna` = case_when(
`Nombre comuna` == "TREGUACO" ~ "TREHUACO",
`Nombre comuna` == "MARCHIHUE" ~ "MARCHIGUE",
TRUE ~ `Nombre comuna`
)) %>%
rename("cod_casen" = `Código`,
"com_nom" = `Nombre comuna`,
"per_pob2020" = `Porcentaje de personas en situación de pobreza por ingresos 2020`) %>%
select(cod_casen, com_nom, per_pob2020)
read_excel("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv")
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv")
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv") %>% slice_sample(1)
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv") %>% slice_sample(n = 1)
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv") %>% slice_sample(n = 1)
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv") %>% group_by(region) %>% summarise(vot_kast = sum(vot_kast))
read_csv("../Charla-UAI-Enero-2022/0.datos/BBDDComuna.csv") %>% group_by(region) %>% summarise(vot_kast = sum(vot_kast), vot_boric = sum(vot_boric))
paste0("https://servelelecciones.cl/data/elecciones_constitucion/computo/comunas/",
x,
".json")
https://servelelecciones.cl/data/elecciones_constitucion/computo/mesas/bycirc_electoral/7479.json
lista_regiones <- fromJSON(file = "https://www.servelelecciones.cl/data/elecciones_constitucion/filters/regiones/all.json")
lista_regiones
diccionario_reg <- data.frame(cod_reg = sapply(lista_regiones, "[[", 1),
region = sapply(lista_regiones, "[[", 2))
diccionario_reg
comunas_x_region <- function(eleccion = "elecciones_constitucion",
id_region = 3015){
url = paste0("http://pv.servelelecciones.cl/data/",
eleccion, "/filters/comunas/byregion/",id_region,".json")
resultado = obtener_json(url)
names(resultado) <- c("id_comuna", "nombre_comuna")
resultado
}
comunas_x_region
comunas_x_region
comunas_x_region()
jsonlite::fromJSON(url)
obtener_json <- function(url){
jsonlite::fromJSON(url)
}
comunas_x_region <- function(eleccion = "elecciones_constitucion",
id_region = 3015){
url = paste0("http://pv.servelelecciones.cl/data/",
eleccion, "/filters/comunas/byregion/",id_region,".json")
resultado = obtener_json(url)
names(resultado) <- c("id_comuna", "nombre_comuna")
resultado
}
comunas_x_region()
diccionario_reg
fromJSON(file = "https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/3001.json")
diccionario_reg
fromJSON(glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{diccionario_reg$cod_reg[i]}.json"))
i <- 1
fromJSON(glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{diccionario_reg$cod_reg[i]}.json"))
diccionario_reg$cod_reg[i]
glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{diccionario_reg$cod_reg[i]}.json")
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{diccionario_reg$cod_reg[i]}.json"))
lista_comunas
sapply(lista_comunas, "[[", 1)
sapply(lista_comunas, "[[", 2)
function(x)){
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
data.frame(cod_reg = x,
cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
}
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
function(x)){
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
data.frame(cod_reg = x,
cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
}
x <- 1
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
data.frame(cod_reg = x,
cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
function(x){
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
data.frame(cod_reg = x,
cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
}
obtener_comuna_reg <- function(x){
lista_comunas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/comunas/byregion/{x}.json"))
data.frame(cod_reg = x,
cod_com = sapply(lista_comunas, "[[", 1),
comuna = sapply(lista_comunas, "[[", 2))
}
obtener_comuna_reg(diccionario_reg$cod_reg[1])
obtener_comuna_reg(diccionario_reg$cod_reg[1])
diccionario_reg$cod_reg
map(diccionario_reg$cod_reg, obtener_comuna_reg())
map(diccionario_reg$cod_reg, obtener_comuna_reg
map(diccionario_reg$cod_reg, obtener_comuna_reg)
diccionario_com <- map(diccionario_reg$cod_reg, obtener_comuna_reg) %>%
bind_rows()
obtener_circ_com <- function(x){
lista_circ <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/circ_electoral/bycomuna/{x}.json"))
data.frame(cod_com = x,
cod_circ = sapply(lista_circ, "[[", 1),
comuna = sapply(lista_circ, "[[", 2))
}
diccionario_circ <- map(diccionario_com$cod_com, obtener_circ_com) %>%
bind_rows()
diccionario_circ
diccionario_circ %>% as_tibble()
diccionario_circ %>% rename(circunscripcion = comuna)
diccionario_circ %>% rename(circunscripcion = comuna) %>% as_tibble()
diccionario_circ <- diccionario_circ %>% rename(circunscripcion = comuna)
diccionario_circ
obtener_loc_circ <- function(x){
lista_loc <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/locales/bycirc_electoral/{x}.json"))
data.frame(cod_circ = x,
cod_loc = sapply(lista_circ, "[[", 1),
local = sapply(lista_circ, "[[", 2))
}
obtener_loc_circ <- function(x){
lista_loc <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/locales/bycirc_electoral/{x}.json"))
data.frame(cod_circ = x,
cod_loc = sapply(lista_circ, "[[", 1),
local = sapply(lista_circ, "[[", 2))
}
diccionario_loc <- map(diccionario_circ$cod_circ, obtener_loc_circ) %>%
bind_rows()
#
obtener_loc_circ <- function(x){
lista_loc <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/locales/bycirc_electoral/{x}.json"))
data.frame(cod_circ = x,
cod_loc = sapply(lista_loc, "[[", 1),
local = sapply(lista_loc, "[[", 2))
}
diccionario_loc <- map(diccionario_circ$cod_circ, obtener_loc_circ) %>%
bind_rows()
diccionario_loc %>% as_tibble
## MESAS POR LOCALES
obtener_mesas_loc <- function(x){
lista_mesas <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/mesas/bylocales/{x}.json"))
data.frame(cod_loc = x,
cod_mesa = sapply(lista_mesas, "[[", 1),
mesa = sapply(lista_mesas, "[[", 2))
}
diccionario_mesas <- map(diccionario_loc$local, obtener_mesas_loc) %>%
bind_rows()
diccionario_loc$local
diccionario_mesas <- map(diccionario_loc$cod_loc, obtener_mesas_loc) %>%
bind_rows()
View(diccionario_loc)
View(diccionario_mesas)
fromJSON(file = glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{2780}.json"))
glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/mesas/bylocales/{2780}.json"))
glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/mesas/bylocales/{2780}.json")
fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/filters/mesas/bylocales/{2780}.json"))
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_com = x,
apruebo = as.numeric(str_remove_all(detalle_mesa[[4]][[1]]$c, "\\.")),
rechazo = as.numeric(str_remove_all(detalle_mesa[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_mesa[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_mesa[[5]][[3]]$c, "\\."))
)
}
resultados_mesas(70010210)
fromJSON(file = glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{70010210}.json"))
fromJSON(file = glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{70010001}.json"))
fromJSON(file = glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{74800002}.json"))
glue("https://www.servelelecciones.cl/elecciones_constitucion/computomesas/{74800002}.json")
"https://servelelecciones.cl/data/elecciones_constitucion/computomesas/74800002.json"
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_com = x,
apruebo = as.numeric(str_remove_all(detalle_mesa[[4]][[1]]$c, "\\.")),
rechazo = as.numeric(str_remove_all(detalle_mesa[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_mesa[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_mesa[[5]][[3]]$c, "\\."))
)
}
resultados_mesas(70010210)
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_mesa = x,
apruebo = as.numeric(str_remove_all(detalle_mesa[[4]][[1]]$c, "\\.")),
rechazo = as.numeric(str_remove_all(detalle_mesa[[4]][[2]]$c, "\\.")),
nulo = as.numeric(str_remove_all(detalle_mesa[[5]][[2]]$c, "\\.")),
blanco = as.numeric(str_remove_all(detalle_mesa[[5]][[3]]$c, "\\."))
)
}
resultados_mesas(70010210)
diccionario_reg
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg")
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com")
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ")
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_mesa")
diccionario_mesas
diccionario_mesas %>% names
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc")
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc") %>%
as_tibble()
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc") %>%
as_tibble() %>% names
diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc") %>%
as_tibble() %>%
View
diccionario_mesa_a_reg <- diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc") %>%
as_tibble() %>%
View
diccionario_mesa_a_reg <- diccionario_reg %>%
left_join(diccionario_com, by = "cod_reg") %>%
left_join(diccionario_circ, by = "cod_com") %>%
left_join(diccionario_loc, by = "cod_circ") %>%
left_join(diccionario_mesas, by = "cod_loc") %>%
as_tibble()
write_csv(diccionario_mesa_a_reg, "planillas_aux/Diccionario_mesa_a_reg.csv")
read_csv("planillas_aux/Diccionario_mesa_a_reg.csv")
diccionario_mesa_a_reg %>% distinct(cod_mesa) %>% nrow
diccionario_mesa_a_reg  %>% nrow
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas)
tic()
resultados_desagregados <- map(diccionario_mesa_a_reg$cod_mesa, resultados_mesas) %>% bind_rows()
toc()
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_mesa = x,
apruebo = as.numeric(str_remove_all(detalle_mesa[[4]][[1]]$c)),
rechazo = as.numeric(str_remove_all(detalle_mesa[[4]][[2]]$c)),
nulo = as.numeric(str_remove_all(detalle_mesa[[5]][[2]]$c)),
blanco = as.numeric(str_remove_all(detalle_mesa[[5]][[3]]$c))
)
}
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas)
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_mesa = x,
apruebo = detalle_mesa[[4]][[1]]$c,
rechazo = detalle_mesa[[4]][[2]]$c,
nulo = detalle_mesa[[5]][[2]]$c,
blanco = detalle_mesa[[5]][[3]]$c
)
}
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas)
diccionario_mesa_a_reg$cod_mesa[1]
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{70010210}.json"))
detalle_mesa[[4]][[1]]$c
detalle_mesa[[4]][[2]]$c
detalle_mesa[[5]][[2]]$c
detalle_mesa[[5]][[3]]$c
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_mesa = x,
apruebo = detalle_mesa[[4]][[1]]$c,
rechazo = detalle_mesa[[4]][[2]]$c,
nulo = detalle_mesa[[5]][[2]]$c,
blanco = detalle_mesa[[5]][[3]]$c
)
}
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas)
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas) %>% bind_rows()
map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas) %>% bind_rows() %>% str
## TRAER RESULTADOS POR MESA
resultados_mesas <- function(x){
detalle_mesa <- fromJSON(file = glue("https://www.servelelecciones.cl/data/elecciones_constitucion/computomesas/{x}.json"))
data.frame(
cod_mesa = x,
apruebo = detalle_mesa[[4]][[1]]$c,
rechazo = detalle_mesa[[4]][[2]]$c,
nulo = detalle_mesa[[5]][[2]]$c,
blanco = detalle_mesa[[5]][[3]]$c
)
}
tic()
resultados_desagregados <- map(diccionario_mesa_a_reg$cod_mesa[1], resultados_mesas) %>% bind_rows()
toc()
tic()
resultados_desagregados <- map(diccionario_mesa_a_reg$cod_mesa, resultados_mesas) %>% bind_rows()
toc()
